//
//  Data Manager.swift
//  Spy
//
//  Created by Илья Тюрин on 17.04.2021.
//

class Faq {
    let titles = ["С чего начать?",
                  "И что дальше?",
                  "Другой игрок не увидит мою роль?",
                  "Как играть?",
                  "Я догадываюсь кто шпион, что делать?",
                  "Я шпион и догадался, о какой локации идет речь",
                  "А зачем таймер?",
                  "Как играть в режиме с несколькими шпионами?",
                  "Мне кажется, что карточки выпадают не рандомно"]
    
    let definition = ["Выберите условия игры: набор слов, время игры, количество игроков и количество шпионов. Кстати, вы также можете выбрать язык игра и играть на своем родном языке!",
                      "В игре есть два вида ролей: граждане и шпионы. Чтобы каждый узнал свою роль, передайте телефон по очереди каждому из игроков.",
                      "Не волнуйся, не увидит) Когда ты нажмешь на карточку, она перевернется. На обратной стороне тебе либо сообщат локацию, либо обрадуют новостью, что ты шпион! После, нажми на карточку еще раз, она скроется. Передай телефон другому игроку.",
                      "Когда все узнали свои роли, начинается игра. Задавайте друг другу вопросы о месте, которое было указано на карточке. Например: есть ли эт место в нашем городе?, Как часто ты там бываешь? и так далее. Человека, не понимаюего о каком месте идет речь, нелегко вычислить. Нужно задавать таке вопросы, чтобы шпион по ним не понял, о какой локации говорят граждане.",
                      "Скажи: Я знаю, кто шпион!. И тогда на счет три все игроки должны указать на того человека, кто, по их мнению, шпион! Если все игроки согласны, то он должен раскрыть свою роль. Если он оказывается местным - шпион выигрывает. Если он действительно шпион - выигрывают местные. Если шпион угадал локацию, то выигрывает шпион.",
                      "Просто скажи: Я знаю, о каком месте вы говорите! И назови это место. Если угадал - ты победил!",
                      "Если местные успели вычислить шпиона до того, как прозвенел таймер, то они выигрывают. Если шпион смог продержаться все это время, выигрывает он.",
                      "Количетво шпионов должно быть всегда меньше количества местных. Если шпионов несколько, то каждый из них играет сам за себя. Чтобы победить, местным нужно вычислить всех шпионов.",
                      "На самом деле это не так. Алгоритм всегда показывает рандомную локацию из группы, которую вы выбрали предварительно :)"]
}

enum Groupes: String {
    case allLocations = "Все локации"
    case coutries = "Страны"
    case sports = "Спорт"
    case travels = "Путешествия"
    case culture = "Культура"
    case child = "Дети"
    case timeMachine = "Машина времени"
    
    var allLocation: [String] {
        Groupes.coutries.definition +
        Groupes.sports.definition +
        Groupes.travels.definition +
        Groupes.culture.definition +
        Groupes.child.definition +
        Groupes.timeMachine.definition
    }
    
    var definition: [String] {
        switch self {
        case .coutries:
            return ["Россия", "Беларусь", "Япония", "США", "Украина", "Великобритания", "Франция", "Италия", "Китай", "Индия", "Канада", "Греция", "Южная Корея", "Турция"]
        case .sports:
            return ["Спортивная площадка", "Поле для гольфа", "Стадион", "Серфинг", "Хоккейная арена", "Бассейн", "Гоночный трек", "Тренажерный зал", "Теннисный корт"]
        case .travels:
            return ["Самолет", "Корабль", "Подводная лодка", "Автобус", "Трамвай", "Космический корабль", "Метро", "Поезд", "Автомобиль", "Такси", "Скейтборд", "Хостел", "Отель", "Палатка"]
        case .culture:
            return ["Галерея", "Музей", "Цирк", "Театр", "Планетарий", "Кинотеатр", "Выставка", "Концертный зал", "Экскурсия"]
        case .child:
            return ["Детская площадка", "Школа", "Детский сад", "Зоопарк", "Каток", "Парк", "Пиццерия", "Урок физкультуры", "ТОрговый центр", "День рождения", "Магазин"]
        case .timeMachine:
            return ["Древняя греция", "Город будущего", "1980-е", "1990-е", "Вторая мировая", "Древний Рим", "СССР", "Средневековье", "2000-е", "Дикий запад", "Каменный век"]
        case .allLocations:
            return allLocation
        }
    }
    
}


